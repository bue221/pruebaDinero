{"version":3,"sources":["routes/routesEnums.ts","components/pages/Dashboard/index.tsx","assets/logo.svg","components/ui/atoms/PasswordInput.tsx","assets/modal.png","components/ui/molecules/ForgetPassword.tsx","assets/1.png","assets/2.png","assets/3.png","components/ui/atoms/InputField.tsx","components/pages/Login/index.tsx","routes/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Paths","DashboardPage","fontSize","textAlign","fontWeight","PasswordInput","isInvalid","props","React","useState","show","setShow","size","pr","type","color","placeholder","w","h","bg","onClick","ViewOff","View","ForgetPasswordModal","useDisclosure","isOpen","onOpen","onClose","recover","setRecover","sendEmail","setSendEmail","useEffect","useForm","handleSubmit","register","watch","onSubmit","data","alert","JSON","stringify","RecoverPasswordForm","display","justifyContent","alignItems","flexDir","mt","mb","errorBorderColor","disabled","borderRadius","ConfirmSendEmail","my","cursor","isCentered","src","background","alt","InputField","LoginPage","caruselImg","1","img1","2","img2","3","img3","TextSlider","as","router","useHistory","slider","setSlider","bgImage","bgRepeat","bgSize","px","py","ml","mr","border","borderColor","ChevronLeft","ChevronRight","mx","logo","ForgetPassword","sitekey","push","DASHBOARD","RoutesComponent","path","component","LOGIN","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b4e824f.chunk.js","sourcesContent":["export enum Paths {\r\n    DASHBOARD = '/dashboard',\r\n    LOGIN='/'\r\n}","import React from \"react\";\r\nimport { Text } from \"@chakra-ui/react\";\r\n\r\nconst DashboardPage = () => {\r\n  return (\r\n    <div>\r\n      <Text fontSize=\"8xl\" textAlign=\"center\" fontWeight=\"bold\">\r\n        Bienvenido a tu dinero\r\n      </Text>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n","export default __webpack_public_path__ + \"static/media/logo.ceb91a62.svg\";","import { ViewOffIcon, ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  InputGroup,\r\n  Input,\r\n  InputRightElement,\r\n  Button,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nfunction PasswordInput({ isInvalid, ...props }: { isInvalid?: boolean }) {\r\n  const [show, setShow] = React.useState(false);\r\n  const handleClick = () => setShow(!show);\r\n\r\n  return (\r\n    <InputGroup size=\"lg\">\r\n      <Input\r\n        {...props}\r\n        pr=\"4.5rem\"\r\n        type={show ? \"text\" : \"password\"}\r\n        color=\"#7c4dff\"\r\n        placeholder=\"Ingresa tu contraseña\"\r\n        isInvalid={isInvalid}\r\n      />\r\n      <InputRightElement w=\"14rem\">\r\n        {isInvalid && <Text color=\"red\">contraseña incorrecta</Text>}\r\n        <Button h=\"1.75rem\" bg=\"transparent\" size=\"sm\" onClick={handleClick}>\r\n          {show ? <ViewOffIcon /> : <ViewIcon />}\r\n        </Button>\r\n      </InputRightElement>\r\n    </InputGroup>\r\n  );\r\n}\r\n\r\nexport default PasswordInput;\r\n","export default __webpack_public_path__ + \"static/media/modal.3d9d2dc0.png\";","import { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalOverlay,\r\n  Text,\r\n  ModalContent,\r\n  Input,\r\n  Box,\r\n  Flex,\r\n  Image,\r\n  ModalCloseButton,\r\n  FormControl,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport background from \"../../../assets/modal.png\";\r\n\r\nfunction ForgetPasswordModal() {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [recover, setRecover] = React.useState(false);\r\n  const [sendEmail, setSendEmail] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      setSendEmail(false);\r\n      setRecover(false);\r\n    };\r\n  }, [isOpen]);\r\n\r\n  const { handleSubmit, register, watch } = useForm();\r\n\r\n  const onSubmit = (data: any) => {\r\n    alert(JSON.stringify(data, null, 2));\r\n  };\r\n\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const handleChange = (e: any) => {\r\n    setEmail(e.target.value);\r\n    console.log(email);\r\n  };\r\n\r\n  // console.log(watch(\"email\"));\r\n\r\n  const RecoverPasswordForm = () => (\r\n    <FormControl\r\n      onSubmit={handleSubmit(onSubmit)}\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      flexDir=\"column\"\r\n    >\r\n      <Text\r\n        color=\"#7c4dff\"\r\n        fontWeight=\"bold\"\r\n        fontSize=\"3xl\"\r\n        w=\"60%\"\r\n        textAlign=\"center\"\r\n      >\r\n        Por favor ingresa tu correo electrónico\r\n      </Text>\r\n      <Input\r\n        {...register(\"email\")}\r\n        w=\"70%\"\r\n        mt={12}\r\n        mb={4}\r\n        errorBorderColor=\"red.300\"\r\n        color=\"#7c4dff\"\r\n        placeholder=\"Ingresa tu correo\"\r\n        size=\"lg\"\r\n      />\r\n      <Button\r\n        disabled={watch(\"email\") === \"\"}\r\n        bg=\"#7c4dff\"\r\n        color=\"white\"\r\n        type=\"submit\"\r\n        onClick={() => {\r\n          setSendEmail(true);\r\n          setRecover(false);\r\n        }}\r\n        w=\"70%\"\r\n        borderRadius={20}\r\n      >\r\n        Enviar correo\r\n      </Button>\r\n    </FormControl>\r\n  );\r\n\r\n  const ConfirmSendEmail = () => (\r\n    <>\r\n      <Text\r\n        color=\"#7c4dff\"\r\n        fontWeight=\"bold\"\r\n        fontSize=\"3xl\"\r\n        w=\"60%\"\r\n        textAlign=\"center\"\r\n      >\r\n        ¡Correo enviado!\r\n      </Text>\r\n      <Text w=\"50%\" color=\"#848ba3\" textAlign=\"center\">\r\n        Hemos enviado un correo, si no lo encuentras en la bandeja de entrada,\r\n        por favor revisa en spam.\r\n      </Text>\r\n      <Button\r\n        bg=\"#7c4dff\"\r\n        color=\"white\"\r\n        onClick={onClose}\r\n        w=\"70%\"\r\n        borderRadius={20}\r\n        mt={4}\r\n      >\r\n        Aceptar\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Text\r\n        onClick={onOpen}\r\n        my={4}\r\n        color=\"#7c4dff\"\r\n        textAlign=\"right\"\r\n        cursor=\"pointer\"\r\n      >\r\n        ¿Olvidaste tu contraseña?\r\n      </Text>\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered size=\"4xl\">\r\n        <ModalOverlay />\r\n        <ModalContent borderRadius={15}>\r\n          <ModalCloseButton color=\"#7c4dff\" />\r\n          <Flex>\r\n            <Box>\r\n              <Image src={background} alt=\"fondo\" />\r\n            </Box>\r\n            <Flex flexDir=\"column\" justifyContent=\"center\" alignItems=\"center\">\r\n              {!sendEmail && !recover && (\r\n                <>\r\n                  {\" \"}\r\n                  <Text\r\n                    color=\"#7c4dff\"\r\n                    fontWeight=\"bold\"\r\n                    fontSize=\"3xl\"\r\n                    w=\"50%\"\r\n                    textAlign=\"center\"\r\n                  >\r\n                    ¿Estás seguro que deseas recuperar tu contraseña?\r\n                  </Text>\r\n                  <Button\r\n                    my={2}\r\n                    bg=\"#7c4dff\"\r\n                    color=\"white\"\r\n                    w=\"70%\"\r\n                    borderRadius={20}\r\n                    onClick={() => setRecover(true)}\r\n                  >\r\n                    Recuperar contraseña\r\n                  </Button>\r\n                  <Button\r\n                    bg=\"gray\"\r\n                    onClick={onClose}\r\n                    color=\"white\"\r\n                    w=\"70%\"\r\n                    borderRadius={20}\r\n                  >\r\n                    Cancelar\r\n                  </Button>\r\n                </>\r\n              )}\r\n              {recover && <RecoverPasswordForm />}\r\n              {sendEmail && <ConfirmSendEmail />}\r\n            </Flex>\r\n          </Flex>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgetPasswordModal;\r\n","export default __webpack_public_path__ + \"static/media/1.64acb923.png\";","export default __webpack_public_path__ + \"static/media/2.553a26fd.png\";","export default __webpack_public_path__ + \"static/media/3.471dc4b8.png\";","import { InputGroup, Input, InputRightElement, Text } from \"@chakra-ui/react\";\r\n\r\nfunction InputField({ isInvalid, ...props }: { isInvalid?: boolean }) {\r\n  return (\r\n    <InputGroup size=\"lg\">\r\n      <Input\r\n        {...props}\r\n        pr=\"4.5rem\"\r\n        type=\"text\"\r\n        color=\"#7c4dff\"\r\n        placeholder=\"Ingresa tu usuario\"\r\n        isInvalid={isInvalid}\r\n      />\r\n      <InputRightElement w=\"14rem\">\r\n        {isInvalid && <Text color=\"red\">Usuario incorrecto</Text>}\r\n      </InputRightElement>\r\n    </InputGroup>\r\n  );\r\n}\r\n\r\nexport default InputField;\r\n","import { ChevronLeftIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Flex,\r\n  Text,\r\n  Button,\r\n  Image,\r\n  Box,\r\n  Input,\r\n  Stack,\r\n  Circle,\r\n} from \"@chakra-ui/react\";\r\nimport logo from \"../../../assets/logo.svg\";\r\nimport PasswordInput from \"../../ui/atoms/PasswordInput\";\r\nimport ForgetPasswordModal from \"../../ui/molecules/ForgetPassword\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Paths } from \"../../../routes/routesEnums\";\r\nimport React from \"react\";\r\n\r\nimport img1 from \"../../../assets/1.png\";\r\nimport img2 from \"../../../assets/2.png\";\r\nimport img3 from \"../../../assets/3.png\";\r\nimport InputField from \"../../ui/atoms/InputField\";\r\n\r\nconst TEST_SITE_KEY = \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\";\r\n\r\nconst LoginPage = () => {\r\n  const caruselImg: any = {\r\n    1: img1,\r\n    2: img2,\r\n    3: img3,\r\n  };\r\n\r\n  const TextSlider: any = {\r\n    1: (\r\n      <Text fontSize=\"4xl\">\r\n        Trabajamos{\" \"}\r\n        <Text fontWeight=\"bold\" as=\"span\">\r\n          juntos\r\n        </Text>{\" \"}\r\n        para prestarte un{\" \"}\r\n        <Text fontWeight=\"bold\" as=\"span\">\r\n          mejor servicio\r\n        </Text>\r\n      </Text>\r\n    ),\r\n    2: (\r\n      <Text fontSize=\"4xl\">\r\n        Las{\" \"}\r\n        <Text fontWeight=\"bold\" as=\"span\">\r\n          transferencias\r\n        </Text>{\" \"}\r\n        más{\" \"}\r\n        <Text fontWeight=\"bold\" as=\"span\">\r\n          rápidas\r\n        </Text>{\" \"}\r\n        del oeste.\r\n      </Text>\r\n    ),\r\n    3: (\r\n      <Text fontSize=\"4xl\">\r\n        <Text fontWeight=\"bold\" as=\"span\">\r\n          ¡Estamos contigo!\r\n        </Text>{\" \"}\r\n        Tu dinero en casa en{\" \"}\r\n        <Text fontWeight=\"bold\" as=\"span\">\r\n          menos de 2 horas.\r\n        </Text>\r\n      </Text>\r\n    ),\r\n  };\r\n\r\n  const router = useHistory();\r\n\r\n  const [slider, setSlider] = React.useState<any>(1);\r\n\r\n  const next = () => {\r\n    if (slider === 3) setSlider(1);\r\n    else {\r\n      setSlider(slider + 1);\r\n    }\r\n  };\r\n\r\n  const back = () => {\r\n    if (slider === 1) setSlider(3);\r\n    else {\r\n      setSlider(slider - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      h=\"100vh\"\r\n      bgImage={caruselImg[slider]}\r\n      bgRepeat=\"no-repeat\"\r\n      bgSize=\"cover\"\r\n    >\r\n      <Flex\r\n        w=\"50%\"\r\n        flexDir=\"column\"\r\n        justifyContent=\"space-between\"\r\n        px={14}\r\n        color=\"white\"\r\n        py={20}\r\n      >\r\n        <Text fontSize=\"2xl\" fontWeight=\"bold\">\r\n          ¿consultar giro?\r\n        </Text>\r\n        <Box mb=\"8rem\">\r\n          {TextSlider[slider]}\r\n          <Flex justifyContent=\"space-between\" w=\"10%\" mt={8} ml={3}>\r\n            <Circle\r\n              size=\"10px\"\r\n              bg={slider === 1 ? \"#69e1f3\" : \"white\"}\r\n              color=\"white\"\r\n            />\r\n            <Circle\r\n              size=\"10px\"\r\n              bg={slider === 2 ? \"#69e1f3\" : \"white\"}\r\n              color=\"white\"\r\n            />\r\n            <Circle\r\n              size=\"10px\"\r\n              bg={slider === 3 ? \"#69e1f3\" : \"white\"}\r\n              color=\"white\"\r\n            />\r\n          </Flex>\r\n          <Flex mt={4}>\r\n            <Button\r\n              mr={10}\r\n              borderRadius=\"50%\"\r\n              bg=\"transparent\"\r\n              border=\"2px\"\r\n              borderColor=\"white\"\r\n              color=\"white\"\r\n              onClick={back}\r\n            >\r\n              <ChevronLeftIcon fontSize=\"2xl\" />\r\n            </Button>\r\n            <Button\r\n              borderRadius=\"50%\"\r\n              bg=\"transparent\"\r\n              border=\"2px\"\r\n              borderColor=\"white\"\r\n              color=\"white\"\r\n              onClick={next}\r\n            >\r\n              <ChevronRightIcon fontSize=\"2xl\" />\r\n            </Button>\r\n          </Flex>\r\n        </Box>\r\n      </Flex>\r\n      <Flex w=\"50%\" flexDir=\"column\">\r\n        <Flex\r\n          bg=\"white\"\r\n          h=\"100%\"\r\n          my={20}\r\n          mx={10}\r\n          borderRadius={12}\r\n          flexDir=\"column\"\r\n          px={10}\r\n        >\r\n          <Box\r\n            my={8}\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            display=\"flex\"\r\n          >\r\n            <Image src={logo} alt=\"logo\" />\r\n          </Box>\r\n          <Text color=\"#7c4dff\" fontSize=\"2xl\" fontWeight=\"bold\">\r\n            Iniciar Sesión\r\n          </Text>\r\n          <Text color=\"#848ba3\">\r\n            Ingresa tus credenciales para acceder a la plataforma.\r\n          </Text>\r\n          <Stack mt={9}>\r\n            <InputField isInvalid />\r\n            <PasswordInput isInvalid />\r\n          </Stack>\r\n          <ForgetPasswordModal />\r\n          <Box mb={8}>\r\n            <ReCAPTCHA sitekey={TEST_SITE_KEY} />\r\n          </Box>\r\n          <Button\r\n            bg=\"#7c4dff\"\r\n            color=\"white\"\r\n            onClick={() => router.push(Paths.DASHBOARD)}\r\n          >\r\n            Ingresar ahora\r\n          </Button>\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { Paths } from \"./routesEnums\";\r\n\r\nimport DashboardPage from \"../components/pages/Dashboard\";\r\nimport LoginPage from \"../components/pages/Login\";\r\n\r\nconst RoutesComponent = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path={Paths.DASHBOARD} component={DashboardPage} />\r\n        <Route path={Paths.LOGIN} component={LoginPage} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default RoutesComponent;\r\n","import { ChakraProvider } from \"@chakra-ui/react\";\nimport RoutesComponent from \"./routes\";\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <RoutesComponent />\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}